// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[3..5], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
    RAM8(in=in, address=address[0..2], load=a, out=o0);
    RAM8(in=in, address=address[0..2], load=b, out=o1);
    RAM8(in=in, address=address[0..2], load=c, out=o2);
    RAM8(in=in, address=address[0..2], load=d, out=o3);
    RAM8(in=in, address=address[0..2], load=e, out=o4);
    RAM8(in=in, address=address[0..2], load=f, out=o5);
    RAM8(in=in, address=address[0..2], load=g, out=o6);
    RAM8(in=in, address=address[0..2], load=h, out=o7);
    Mux8Way16(a=o0, b=o1, c=o2, d=o3, e=o4, f=o5, g=o6, h=o7, sel=address[3..5], out=out);
}
